{"ast":null,"code":"import { takeLatest, put, all } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS } from \"./../types/products\"; // lấy tất cả data từ products\n\nfunction* getDataAdmin() {\n  const res = yield axios.get(\"https://dboi.info/api/products\");\n\n  if (res.status === 200) {\n    const {\n      data\n    } = res.data;\n    yield put({\n      type: PRODUCT_GET_ADMIN_SUCCESS,\n      payload: data\n    });\n  }\n}\n\nfunction* getListProduct() {\n  yield takeLatest(PRODUCT_GET_ADMIN_REQUEST, getDataAdmin);\n} //submit\n\n\nfunction* getDatatoSubmit({\n  cate\n}) {\n  const res = yield axios.post(\"https://dboi.info/api/products\", cate);\n\n  if (res.status === 200 && res.data.code === 200) {\n    const {\n      data\n    } = res.data;\n    yield put({\n      type: PRODUCT_SUBMIT_SUCCESS,\n      payload: data\n    });\n  }\n}\n\nfunction* getSubmitProduct() {\n  yield takeLatest(PRODUCT_SUBMIT_REQUEST, getDatatoSubmit);\n} //delete\n\n\nfunction* deleteProducts({\n  id\n}) {\n  const res = yield axios.delete(`https://dboi.info/api/products/${id}`);\n\n  if (res.status === 200 && res.data.code === 200) {\n    yield put({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: id\n    });\n  }\n}\n\nfunction* deleteIdProducts() {\n  yield takeLatest(PRODUCT_DELETE_REQUEST, deleteProducts);\n} // GET EDIT PRODUCT DATA\n\n\nfunction* getEditData({\n  id\n}) {\n  const res = yield axios.get(`https://dboi.info/api/products/${id}`);\n\n  if (res.status === 200) {\n    const {\n      data\n    } = res.data;\n    yield put({\n      type: PRODUCT_GET_EDIT_DATA_SUCCESS,\n      payload: data\n    });\n  }\n}\n\nfunction* getEditProduct() {\n  yield takeLatest(PRODUCT_GET_EDIT_DATA_REQUEST, getEditData);\n} // UPDATE EDIT DATA\n\n\nfunction* updateEditData({\n  data\n}) {\n  const res = yield axios.put(`https://dboi.info/api/products/${data.id}`, data);\n\n  if (res.status === 200) {\n    const {\n      data\n    } = res.data;\n    yield put({\n      type: PRODUCT_UPDATE_EDIT_DATA_SUCCESS,\n      payload: data\n    });\n  }\n}\n\nfunction* updateEditProduct() {\n  yield takeLatest(PRODUCT_UPDATE_EDIT_DATA_REQUEST, updateEditData);\n}\n\nexport default function* () {\n  yield all([getListProduct(), getSubmitProduct(), deleteIdProducts(), getEditProduct(), updateEditProduct()]);\n}","map":{"version":3,"sources":["D:/Develop/Express/Front-End/New folder/src/redux/sagas/productAmin.js"],"names":["takeLatest","put","all","axios","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","getDataAdmin","res","get","status","data","type","PRODUCT_GET_ADMIN_SUCCESS","payload","getListProduct","PRODUCT_GET_ADMIN_REQUEST","getDatatoSubmit","cate","post","code","PRODUCT_SUBMIT_SUCCESS","getSubmitProduct","PRODUCT_SUBMIT_REQUEST","deleteProducts","id","delete","PRODUCT_DELETE_SUCCESS","deleteIdProducts","PRODUCT_DELETE_REQUEST","getEditData","PRODUCT_GET_EDIT_DATA_SUCCESS","getEditProduct","PRODUCT_GET_EDIT_DATA_REQUEST","updateEditData","PRODUCT_UPDATE_EDIT_DATA_SUCCESS","updateEditProduct","PRODUCT_UPDATE_EDIT_DATA_REQUEST"],"mappings":"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","sourcesContent":["import { takeLatest, put, all } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS\r\n} from \"./../types/products\";\r\n\r\n// lấy tất cả data từ products\r\n\r\nfunction* getDataAdmin() {\r\n  const res = yield axios.get(\"https://dboi.info/api/products\");\r\n  if (res.status === 200) {\r\n    const { data } = res.data;\r\n    yield put({ type: PRODUCT_GET_ADMIN_SUCCESS, payload: data });\r\n  }\r\n}\r\n\r\nfunction* getListProduct() {\r\n  yield takeLatest(PRODUCT_GET_ADMIN_REQUEST, getDataAdmin);\r\n}\r\n\r\n//submit\r\nfunction* getDatatoSubmit({ cate }) {\r\n  const res = yield axios.post(\"https://dboi.info/api/products\", cate);\r\n  if (res.status === 200 && res.data.code === 200) {\r\n    const { data } = res.data;\r\n    yield put({ type: PRODUCT_SUBMIT_SUCCESS, payload: data });\r\n  }\r\n}\r\n\r\nfunction* getSubmitProduct() {\r\n  yield takeLatest(PRODUCT_SUBMIT_REQUEST, getDatatoSubmit);\r\n}\r\n\r\n//delete\r\nfunction* deleteProducts({ id }) {\r\n  \r\n  const res = yield axios.delete(`https://dboi.info/api/products/${id}`);\r\n  if (res.status === 200 && res.data.code === 200) {\r\n    yield put({ type: PRODUCT_DELETE_SUCCESS, payload: id });\r\n  }\r\n}\r\n\r\nfunction* deleteIdProducts() {\r\n  yield takeLatest(PRODUCT_DELETE_REQUEST, deleteProducts);\r\n}\r\n\r\n\r\n// GET EDIT PRODUCT DATA\r\n\r\nfunction* getEditData({id}) {\r\n  const res = yield axios.get(`https://dboi.info/api/products/${id}`);\r\n  if (res.status === 200) {\r\n    const { data } = res.data;\r\n    yield put({ type: PRODUCT_GET_EDIT_DATA_SUCCESS, payload: data });\r\n  }\r\n}\r\n\r\nfunction* getEditProduct() {\r\n  yield takeLatest(PRODUCT_GET_EDIT_DATA_REQUEST, getEditData);\r\n}\r\n\r\n// UPDATE EDIT DATA\r\nfunction* updateEditData({data}) {\r\n  const res = yield axios.put(`https://dboi.info/api/products/${data.id}`, data);\r\n  if (res.status === 200) {\r\n    const { data } = res.data;\r\n    yield put({ type: PRODUCT_UPDATE_EDIT_DATA_SUCCESS, payload: data });\r\n  }\r\n}\r\n\r\nfunction* updateEditProduct() {\r\n  yield takeLatest(PRODUCT_UPDATE_EDIT_DATA_REQUEST, updateEditData);\r\n}\r\n\r\nexport default function* () {\r\n  yield all([getListProduct(), getSubmitProduct(), deleteIdProducts(),getEditProduct(),updateEditProduct()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}